[EXAMPLES]

add to the default category:

    sire -a "rule the earth"
    sire -a eat
    sire -a sleep

add to category 3:

    sire -a "build a bunker" --destination 3
    sire -a profit -D 3

add to category "life goals":

    sire -a "world domination" -D "life goals"

list all items in all categories

    sire -l all

list all items in category "life goals"

    sire -l "life goals"

list all items in category 'somecat' added no more than 10 days ago

    sire --days-ago 10 --list somecat
    sire -y 10 -l somecat

same thing in default category

    sire --days-ago 10
    sire -y 10

list all items in the default category (specified in sirerc)

    sire

only list all category titles

    sire -l titles

list duplicates in all categories

    sire -l dupe

list duplicates in category '1', '2', 'life goals' and 'gk'

    sire -l dupe -D 1,2,"life goals",3,gk
    sire --list dupe --destination 1,2,"life goals",3,gk

delete item with ID '39'

    sire --delete 39
    sire -d 39

delete items with ID '12', '2023' and '45'

    sire -d 12,2023,45

move item with ID '23' to the category 'life goals'

    sire --move 23 --destination "life goals"
    sire -m 23 -D "life goals"

move item with ID '23' to the category '3'

    sire -m 23 --destination 3

move item with ID '569' to the default category (specified in sirerc)

    sire -m 569

search for 'world domination' and 'eat'

    sire -f "world DomINAatiON"
    sire --find eat
    sire -f milk -D food

change the value of the item with ID '34'

    sire -c 34 -D "new value for 34"

insert some text before the value of the item with ID '34' using references ('%(<number>)'), and self references ('%(#)')

    sire --change 34 --destination "text before the item %(34)"
    sire -c 34 -D "text before the item %(#)"

use the value of another item in this item's value

    sire -c 34 -D "%(204)"

change the value of the items with IDs '12','13','14','402','94'

    sire -c 12,13,14,402,94 -D "some text, may have %(102) and %(40) and so on"

combine self references, ordinary references and multiple IDs

    sire -c 2,30,409 -D "%(300), %(20) is crap, but %(#) and %(2) is great!"

hide things when listing category 'somecat' (self-explanatory)

    sire --no-color --no-id --no-newline --no-category --list somecat
    sire -LINC --list somecat
    sire --hide-all --list somecat
    sire -Hl somecat

pretend to add to see if the thing you want to do is actually going to do what you want

    sire --pretend --delete 34,45,32,504
    sire -pd 34,45,32,504

When you use another profile, you will use another set of items of the database. This might be useful if you're using a script connected to a web page or an irc channel where other people may add/remove items and you don't want your own database to be used.

    sire --profile dave --add "some value" --destination dcat
    sire -p dave -a "some value" -d dcat

use profile 'dave' to list its default category

    sire -p dave

print formated table showing some information about items with ID '1', '230' and '20'

    sire --info 1,230,20
    sire -i 1,230,20

print formated tables showing some information about items with ID 334 and and all between and including 200 and 300, but -not- 233 and any between and including 250 and 260

    sire --info 334,200-300,%233,%250-260

[IN-DEPTH]


    :::: CNR Format ::::

CNR stands for "Comma-separated, Negations and Ranges." They can be either IDs or categories, not both. They are the supported format for specifying IDs and/or categories. At any place where you may submit an ID or category, CNR format is supported.

All CNR values specified to the same operation (list, info, destination etc.) must be of the same type, i.e. ID or category.

The CNR Format looks like to following:
    
    <[%]CNR1[-CNR2]>[,[%]CNR3[-CNR4]][,...]

At least one CNR is required.




    :::: --info, -i ::::

The (--info, -i) operation looks like this:

    sire <<--info|-i> <CNR(ID)>> [<--destination|-D> <CNR(CAT)>]

Every argument that is either supposed to ba an ID or category support formats called CNR values; Comma-separated, Negations and Ranges. Negations are specified with a '%' before them. You can then list info about some IDs this way:

    sire --info 1-50,%10-20,%4,55

Which will show info about items with ID 1 through 50 and 55, except for 10 through 20 and 4.

If you specify some categories in (--destination, -D), sire will only look for the specified IDs in those categories.




    :::: --add, -i ::::

The (--add, -i) operation looks like this:

    sire <<--add|-a> <TITLE>> [<--destination|-D> <CNR(CAT)>]

This will add TITLE to the specified category/categories or, if no (--destination, -D) was specified, the default category specified in the config file.




    :::: --delete, -d ::::

The (--delete, -d) operation looks like this:

    sire <<--delete|-d> <CNR(ID)>>

This will delete all specified IDs.

Before any deletion is made, a complete backup will be performed of the database. This behavior is by default enabled, it can be disabled in the config file.




    :::: --change, -c ::::

The (--change, -c) operation looks like this:

    TODO

This will TODO




    :::: --find, -f ::::

The (--find, -f) operation looks like this:

    sire <<--find|-f> <TITLE>> [<--destination|-D> <CNR(CAT)>]

This will search for the given string using fuzzy string matching. If categories are specified with (--destination, -D), sire will only search in these categories. If no categories are specified, sire will search in all categories.




    :::: --list, -l ::::

The (--list, -l) operation looks like this:

    sire [<--list|-l> <CNR(CAT)>]

This will list all items in the specified categories. If no category is specified, the default list-category will be used. The default list-category may be changed in the config.




    :::: --move, -m ::::

The (--move, -m) operation looks like this:

    sire <<--move|-m> <CNR(ID)>> [<--destination|-D> <CAT>]

This will move the specified IDs to the specified category (singular). This is the only exception where CNR Format is not--and will not--be supported for (--destination, -D). If no category is specified, the item(s) will be moved to the default move-category. The default move-category may be changed in the config.

